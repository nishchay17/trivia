{"version":3,"sources":["assets/error.gif","assets/Drake.png","assets/Pooh.jpg","assets/carry.png","assets/irfan.jpg","components/Nav.js","components/Body.js","components/NavMobile.js","components/Quiz.js","components/ChoicePage.js","api.js","components/TrueFalse.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","linkStyle","color","paddingLeft","paddingRight","className","style","backgroundColor","fontSize","href","id","to","Body","target","NavMobile","position","bottom","right","left","Quiz","props","arr","useState","location","data","results","questions","amount","setAmount","maxAmount","score","setScore","check","index","setTimeout","incorrect_answers","push","correct_answer","shuffle","question","replace","class","onClick","card","result","ChoicePage","randomGif","gif","Math","floor","random","difficulty","setDifficulty","category","setCategory","error","setError","notFound","setnotFound","isBoolean","setIsBoolean","allowedEmoji","onSubmit","event","preventDefault","type","fetch","method","then","res","json","catch","err","console","log","getQuestions","response_code","history","pathname","handleChangeAmount","value","handleChangeDifficulty","handleChangeCategory","useEffect","length","for","required","onChange","selected","src","errorGif","errorPage","frameBorder","zIndex","noMatch","Image","Drake","Pooh","Carry","Irfan","TrueFalse","btnTrue","setbtnTrue","btnFalse","setbtnFalse","checkTrue","checkFalse","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8b5cfc71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.57d2e610.gif\";","module.exports = __webpack_public_path__ + \"static/media/Drake.c297d476.png\";","module.exports = __webpack_public_path__ + \"static/media/Pooh.d9f4e81c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carry.db89d960.png\";","module.exports = __webpack_public_path__ + \"static/media/irfan.72c3b954.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const linkStyle = {\r\n    color: \"white\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n  };\r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"navbar navbar-expand-lg navbar-dark p-3 ml-auto text-center\"\r\n        style={{ backgroundColor: \"black\", fontSize: \"1.4rem\" }}\r\n      >\r\n        <a className=\"navbar-brand d-md-none\" href=\"#\">\r\n          🔥Trivia Game🔥\r\n        </a>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"nav-item active\">\r\n              <span className=\"nav-link d-none d-lg-block\" href=\"/\">\r\n                🔥Trivia Game🔥 <span className=\"sr-only\">(current)</span>\r\n              </span>\r\n            </li>\r\n            <Link to=\"/\">\r\n              <li className=\"nav-item active mt-2\" style={linkStyle}>\r\n                Home🏠\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/truefalse\">\r\n              <li className=\"nav-item active mt-2\" style={linkStyle}>\r\n                True✅ / False❌\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/quiz\">\r\n              <li className=\"nav-item active mt-2\" style={linkStyle}>\r\n                Quiz🎈\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst Body = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4 mt-5 mx-3\">Hello There ❗</h1>\r\n      <div className=\"lead px-3 my-5\">\r\n        Welcome to my Trivia Game 🅰🅿🅿, created with ReactJS.\r\n        <br /> There are Two modes by which you could play, True✅ And False❌ ,\r\n        and Multiple Choice Questions (MCQ). I hope you will like the twist of\r\n        Gifs and Memes added in it.\r\n        <p>\r\n          <small>\r\n            <br />{\" \"}\r\n            <a href=\"https://opentdb.com/\" target=\"_blank\">\r\n              This API\r\n            </a>{\" \"}\r\n            is Used for getting the Questions.\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavMobile = () => {\r\n  const linkStyle = {\r\n    color: \"white\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"navbar navbar-dark d-md-none\"\r\n        style={{\r\n          backgroundColor: \"black\",\r\n          fontSize: \"1.3rem\",\r\n          position: \"fixed\",\r\n          bottom: \"-2px\",\r\n          right: \"0px\",\r\n          left: \"0px\",\r\n        }}\r\n      >\r\n        <ul className=\"nav m-auto py-2\" style={{ color: \"white\" }}>\r\n          <Link to=\"/truefalse\">\r\n            <li className=\"nav-item active\" style={linkStyle}>\r\n              T✅ / F❌\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <li className=\"nav-item active mx-3\" style={linkStyle}>\r\n              Home🏠\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/quiz\">\r\n            <li className=\"nav-item active\" style={linkStyle}>\r\n              Quiz🎈\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMobile;\r\n","import React, { useState } from \"react\";\r\nimport shuffle from \"shuffle-array\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Quiz = (props) => {\r\n  const arr = [0, 1, 2, 3];\r\n  const [questions, setQuestions] = useState(props.location.data?.results);\r\n  const [amount, setAmount] = useState(0);\r\n  const maxAmount = props.location.amount;\r\n  const [score, setScore] = useState(0);\r\n  if (typeof props.location.data == \"undefined\") {\r\n    return <Redirect to=\"/quiz\"></Redirect>;\r\n  }\r\n  const check = (index) => {\r\n    if (index === 3) {\r\n      setScore(score + 5);\r\n    } else {\r\n      setScore(score - 1);\r\n    }\r\n    setTimeout(() => {\r\n      setAmount(amount + 1);\r\n    }, 0);\r\n  };\r\n\r\n  const card = () => {\r\n    if (amount < maxAmount) {\r\n      questions[amount].incorrect_answers.push(\r\n        questions[amount].correct_answer\r\n      );\r\n      shuffle(arr);\r\n      return (\r\n        <div className=\"container border p-3\">\r\n          <div className=\"h4 m-3\">\r\n            {questions[amount].question\r\n              .replace(\"&quot;\", `'`)\r\n              .replace(\"&quot;\", `'`)\r\n              .replace(\"&quot;\", `'`)\r\n              .replace(\"&eacute;\", \"\")\r\n              .replace(\"&eacute;\", \"\")\r\n              .replace(\"&#039;\", `'`)\r\n              .replace(\"&#039;\", `'`)\r\n              .replace(\"&#039;\", `'`)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&rsquo;\", ` `)\r\n              .replace(\"&rsquo;\", ` `)\r\n              .replace(\"&rsquo;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&shy;\", ` `)\r\n              .replace(\"&quot;\", `'`)}\r\n          </div>\r\n          <div class=\"row align-middle my-3 justify-content-center\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <button\r\n                class=\"btn btn-outline-info btn-lg mx-2 mt-2\"\r\n                onClick={() => check(arr[0])}\r\n              >\r\n                {questions[amount].incorrect_answers[arr[0]]}\r\n              </button>\r\n              <button\r\n                class=\"btn btn-outline-info btn-lg mx-2 mt-2\"\r\n                onClick={() => check(arr[1])}\r\n              >\r\n                {questions[amount].incorrect_answers[arr[1]]}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row align-middle justify-content-center\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <button\r\n                class=\"btn btn-outline-info btn-lg mx-2 mt-2\"\r\n                onClick={() => check(arr[2])}\r\n              >\r\n                {questions[amount].incorrect_answers[arr[2]]}\r\n              </button>\r\n              <button\r\n                class=\"btn btn-outline-info btn-lg mx-2 mt-2\"\r\n                onClick={() => check(arr[3])}\r\n              >\r\n                {questions[amount].incorrect_answers[arr[3]]}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const result = () => {\r\n    if (amount >= maxAmount)\r\n      return (\r\n        <div>\r\n          <div className=\"h1 my-5\">\r\n            {score} is your score out of {5 * maxAmount}\r\n          </div>\r\n          <Link className=\"btn btn-outline-info btn-lg\" to=\"/quiz\">\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        <h1 className=\"mt-3\">\r\n          {maxAmount - amount\r\n            ? maxAmount - amount + \" More To Go\"\r\n            : \"Completed 🎉\"}\r\n        </h1>\r\n      }\r\n      {card()}\r\n      {result()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getQuestions } from \"../api\";\r\nimport gif from \"../assets/nogif.json\";\r\nimport errorGif from \"../assets/error.gif\";\r\n\r\nconst ChoicePage = (props) => {\r\n  const randomGif = gif[Math.floor(Math.random() * 4)];\r\n  const [amount, setAmount] = useState(\"10\");\r\n  const [difficulty, setDifficulty] = useState(\"easy\");\r\n  const [category, setCategory] = useState(\"9\");\r\n  const [error, setError] = useState(false);\r\n  const [notFound, setnotFound] = useState(0);\r\n  const [isBoolean, setIsBoolean] = useState(false);\r\n  const allowedEmoji = [...\"🍉👾🤪😴👻👽🤖🐭🦕🦖🐉🍔🍕🍍🚗🐙🕸🦾🎃🏀\"];\r\n  const preLoad = () => {\r\n    if (props.history.location.pathname === \"/truefalse\") {\r\n      setIsBoolean(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    getQuestions(isBoolean, amount, category, difficulty)\r\n      .then((data) => {\r\n        setnotFound(data.response_code);\r\n        if (data.response_code) return;\r\n        if (isBoolean)\r\n          props.history.push({ pathname: \"/truefalsestart\", data, amount });\r\n        else props.history.push({ pathname: \"/quizstart\", data, amount });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  const handleChangeAmount = (event) => {\r\n    setAmount(event.target.value);\r\n    setnotFound(0);\r\n    setError(false);\r\n  };\r\n  const handleChangeDifficulty = (event) => {\r\n    setDifficulty(event.target.value);\r\n    setnotFound(0);\r\n    setError(false);\r\n  };\r\n  const handleChangeCategory = (event) => {\r\n    setCategory(event.target.value);\r\n    setnotFound(0);\r\n    setError(false);\r\n  };\r\n\r\n  const form = () => (\r\n    <form>\r\n      <div className=\"form-row\">\r\n        <div class=\"form-group col-md-4\">\r\n          <label for=\"inputState\" className=\"lead\">\r\n            Number of Questions\r\n          </label>\r\n          <select\r\n            id=\"inputState\"\r\n            class=\"form-control\"\r\n            required\r\n            onChange={handleChangeAmount}\r\n            value={amount}\r\n          >\r\n            <option selected value=\"10\">\r\n              10\r\n            </option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"15\">15</option>\r\n            <option value=\"20\">20</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group col-md-4\">\r\n          <label for=\"inputState\" className=\"lead\">\r\n            Category\r\n          </label>\r\n          <select\r\n            id=\"inputState\"\r\n            class=\"form-control\"\r\n            required\r\n            onChange={handleChangeCategory}\r\n            value={category}\r\n          >\r\n            <option value=\"any\">Any Category</option>\r\n            <option value=\"9\">General Knowledge</option>\r\n            <option value=\"10\">Entertainment: Books</option>\r\n            <option value=\"11\">Entertainment: Film</option>\r\n            <option value=\"12\">Entertainment: Music</option>\r\n            <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n            <option value=\"14\">Entertainment: Television</option>\r\n            <option value=\"15\">Entertainment: Video Games</option>\r\n            <option value=\"16\">Entertainment: Board Games</option>\r\n            <option value=\"17\">Science &amp; Nature</option>\r\n            <option value=\"18\">Science: Computers</option>\r\n            <option value=\"19\">Science: Mathematics</option>\r\n            <option value=\"20\">Mythology</option>\r\n            <option value=\"21\">Sports</option>\r\n            <option value=\"22\">Geography</option>\r\n            <option value=\"23\">History</option>\r\n            <option value=\"24\">Politics</option>\r\n            <option value=\"25\">Art</option>\r\n            <option value=\"26\">Celebrities</option>\r\n            <option value=\"27\">Animals</option>\r\n            <option value=\"28\">Vehicles</option>\r\n            <option value=\"29\">Entertainment: Comics</option>\r\n            <option value=\"30\">Science: Gadgets</option>\r\n            <option value=\"31\">\r\n              Entertainment: Japanese Anime &amp; Manga\r\n            </option>\r\n            <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group col-md-4\">\r\n          <label for=\"inputState\" className=\"lead\">\r\n            Difficulty\r\n          </label>\r\n          <select\r\n            id=\"inputState\"\r\n            class=\"form-control\"\r\n            value={difficulty}\r\n            required\r\n            onChange={handleChangeDifficulty}\r\n          >\r\n            <option value=\"easy\">😎 Easy</option>\r\n            <option value=\"medium\">🤯 Medium</option>\r\n            <option value=\"hard\">💀 Hard</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button onClick={onSubmit} className=\"btn btn-outline-info btn-lg mt-2\">\r\n        Start 🔥\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const noMatch = () => {\r\n    if (notFound) {\r\n      return (\r\n        <div className=\"container text-center mt-3 mb-5\">\r\n          NO MATCH FOR THIS QUERY🥀\r\n          <div className=\"col-8 offset-2 col-md-4 mt-2 offset-md-4 embed-responsive embed-responsive-1by1\">\r\n            <iframe\r\n              src={randomGif}\r\n              frameBorder=\"0\"\r\n              class=\"giphy-embed\"\r\n              style={{ zIndex: \"-1\" }}\r\n            ></iframe>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const errorPage = () => {\r\n    if (error) {\r\n      return (\r\n        <div className=\"row text-center mt-3 mb-5\">\r\n          <div className=\"col-8 offset-2 col-md-4 offset-md-4\">\r\n            <img src={errorGif} className=\"rounded mx-auto img-fluid\"></img>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <h1>💩</h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const heading = () => {\r\n    if (isBoolean) {\r\n      return (\r\n        <div>\r\n          <h2 className=\"display-4\">True or False</h2>\r\n          <p className=\"lead\">\r\n            ➕5️⃣ for Correct answer and ➖1️⃣ for wrong answer{\" \"}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div>\r\n          <h2 className=\"display-4 mb-3\">\r\n            Quiz\r\n            {\r\n              [...allowedEmoji][\r\n                Math.floor(Math.random() * [...allowedEmoji].length - 1)\r\n              ]\r\n            }\r\n            {\r\n              [...allowedEmoji][\r\n                Math.floor(Math.random() * [...allowedEmoji].length - 1)\r\n              ]\r\n            }\r\n          </h2>\r\n          <p className=\"lead\">\r\n            ➕5️⃣ for Correct answer and ➖1️⃣ for wrong answer{\" \"}\r\n          </p>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {heading()}\r\n      {form()}\r\n      {errorPage()}\r\n      {noMatch()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoicePage;\r\n","const API = \"https://opentdb.com/api.php?\";\r\n\r\nexport const getQuestions = (isBoolean, amount, category, difficulty) => {\r\n  let type = isBoolean ? \"boolean\" : \"multiple\";\r\n  return fetch(\r\n    `${API}amount=${amount}&category=${category}&difficulty=${difficulty}&type=${type}`,\r\n    {\r\n      method: \"GET\",\r\n    }\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Drake from \"../assets/Drake.png\";\r\nimport Pooh from \"../assets/Pooh.jpg\";\r\nimport Carry from \"../assets/carry.png\";\r\nimport Irfan from \"../assets/irfan.jpg\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Image = [Drake, Pooh, Carry, Irfan];\r\n\r\nconst TrueFalse = (props) => {\r\n  const [questions, setQuestions] = useState(props.location.data?.results);\r\n  const [amount, setAmount] = useState(0);\r\n  const maxAmount = props.location.amount;\r\n  const [score, setScore] = useState(0);\r\n  const [btnTrue, setbtnTrue] = useState(\"btn btn-outline-info btn-lg\");\r\n  const [btnFalse, setbtnFalse] = useState(\"btn btn-outline-info btn-lg\");\r\n  if (typeof props.location.data == \"undefined\") {\r\n    return <Redirect to=\"/truefalse\"></Redirect>;\r\n  }\r\n  const checkTrue = () => {\r\n    if (questions[amount].correct_answer === \"True\") {\r\n      setScore(score + 5);\r\n      setbtnTrue(\"btn btn-success btn-lg\");\r\n      setbtnFalse(\"btn btn-danger btn-lg\");\r\n    } else {\r\n      setScore(score - 1);\r\n      setbtnTrue(\"btn btn-danger btn-lg\");\r\n      setbtnFalse(\"btn btn-success btn-lg\");\r\n    }\r\n    setTimeout(() => {\r\n      setbtnTrue(\"btn btn-outline-info btn-lg\");\r\n      setbtnFalse(\"btn btn-outline-info btn-lg\");\r\n      setAmount(amount + 1);\r\n    }, 1000);\r\n  };\r\n  const checkFalse = () => {\r\n    if (questions[amount].correct_answer === \"False\") {\r\n      setScore(score + 5);\r\n      setbtnTrue(\"btn btn-danger btn-lg\");\r\n      setbtnFalse(\"btn btn-success btn-lg\");\r\n    } else {\r\n      setbtnTrue(\"btn btn-success btn-lg\");\r\n      setbtnFalse(\"btn btn-danger btn-lg\");\r\n      setScore(score - 1);\r\n    }\r\n    setTimeout(() => {\r\n      setbtnTrue(\"btn btn-outline-info btn-lg\");\r\n      setbtnFalse(\"btn btn-outline-info btn-lg\");\r\n      setAmount(amount + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  const card = () => {\r\n    if (amount < maxAmount)\r\n      return (\r\n        <div>\r\n          <div className=\"container border p-3\">\r\n            <div className=\"h4 m-3\">\r\n              {questions[amount].question\r\n                .replace(\"&quot;\", `'`)\r\n                .replace(\"&quot;\", `'`)\r\n                .replace(\"&quot;\", `'`)\r\n                .replace(\"&eacute;\", \"\")\r\n                .replace(\"&eacute;\", \"\")\r\n                .replace(\"&#039;\", `'`)\r\n                .replace(\"&#039;\", `'`)\r\n                .replace(\"&quot;\", `'`)}\r\n            </div>\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col\">\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img src={Image[amount % 4]} className=\"img-fluid\"></img>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"row align-items-center\">\r\n                  <div className=\"col\">\r\n                    <button\r\n                      className={`${btnFalse} mt-4 mb-sm-5`}\r\n                      onClick={checkFalse}\r\n                    >\r\n                      False\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className=\"col\">\r\n                    <button\r\n                      className={`${btnTrue} mt-4 mb-sm-5`}\r\n                      onClick={checkTrue}\r\n                    >\r\n                      True\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const result = () => {\r\n    if (amount >= maxAmount)\r\n      return (\r\n        <div>\r\n          <div className=\"h1 my-5\">\r\n            {score} is your score out of {5 * maxAmount}\r\n          </div>\r\n          <Link className=\"btn btn-outline-info btn-lg\" to=\"/truefalse\">\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <h1>\r\n        {maxAmount - amount\r\n          ? maxAmount - amount + \" More To Go\"\r\n          : \"Completed 🎉\"}\r\n      </h1>\r\n      {card()}\r\n      {result()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrueFalse;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Body from \"./components/Body\";\nimport NavMobile from \"./components/NavMobile\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Quiz from \"./components/Quiz\";\nimport ChoicePage from \"./components/ChoicePage\";\nimport TrueFalse from \"./components/TrueFalse\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Route path=\"/quiz\" exact component={ChoicePage} />\n        <Route path=\"/truefalse\" exact component={ChoicePage} />\n        <Route path=\"/trivia\" exact component={Body} />\n        <Route path=\"/\" exact component={Body} />\n        <Route path=\"/truefalsestart\" exact component={TrueFalse} />\n        <Route path=\"/quizstart\" exact component={Quiz} />\n        <NavMobile />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}